<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    xmlns:model="clr-namespace:EasyLife.Models"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:pagemodels="clr-namespace:EasyLife.PageModels" 
    xmlns:fontAwesome="clr-namespace:FontAwesome" 
    xmlns:cells="clr-namespace:EasyLife.Cells"
    x:Class="EasyLife.Pages.Home_Page"
    Title="{Binding Title}"
    BackgroundColor="{DynamicResource Page_Backgroundcolor}"
    x:DataType="pagemodels:Home_PageModel">

    <ContentPage.BindingContext>
        <pagemodels:Home_PageModel />
    </ContentPage.BindingContext>

    <ContentPage.Behaviors>
        <xct:EventToCommandBehavior
                EventName="Appearing"
                Command="{Binding RefreshCommand}" />
        <xct:EventToCommandBehavior
                EventName="Disappearing"
                Command="{Binding ViewIsDisappearing_Command}" />
    </ContentPage.Behaviors>

    <ContentPage.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="Einnamen" x:DataType="{x:Null}">
                <ViewCell>
                    <Grid RowDefinitions="1,*,1" ColumnDefinitions="5,*,5">
                        <SwipeView BackgroundColor="Transparent" Grid.Row="1" Grid.Column="1">
                            <SwipeView.RightItems>
                                <SwipeItems>
                                    <SwipeItemView Command="{Binding Source={x:Reference ContextSwipeView}, Path=BindingContext.EditCommand}" CommandParameter="{Binding .}">
                                        <Frame Margin="5,0,0,0" BackgroundColor="{DynamicResource Edit_Backgroundcolor}" CornerRadius="20" xct:ShadowEffect.Opacity="0.7" BorderColor="{DynamicResource Edit_Bordercolor}">
                                            <Label Text="Bearbeiten" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Edit_Textcolor}" FontAttributes="Bold" FontSize="Medium"/>
                                        </Frame>
                                    </SwipeItemView>
                                </SwipeItems>
                            </SwipeView.RightItems>
                            <SwipeView.LeftItems>
                                <SwipeItems>
                                    <SwipeItemView Command="{Binding Source={x:Reference ContextSwipeView}, Path=BindingContext.RemoveCommand}" CommandParameter="{Binding .}">
                                        <Frame Margin="0,0,5,0" BackgroundColor="{DynamicResource Remove_Backgroundcolor}" CornerRadius="20" xct:ShadowEffect.Opacity="0.7" BorderColor="{DynamicResource Remove_Bordercolor}">
                                            <Label Text="Löschen" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Remove_Textcolor}" FontAttributes="Bold" FontSize="Medium"/>
                                        </Frame>
                                    </SwipeItemView>
                                </SwipeItems>
                            </SwipeView.LeftItems>
                            <cells:Income_Cell Grid.Row="1" Grid.Column="1"/>
                        </SwipeView>
                    </Grid>
                </ViewCell>
            </DataTemplate>
            <DataTemplate x:Key="Ausgaben" x:DataType="{x:Null}">
                <ViewCell >
                    <Grid RowDefinitions="1,*,1" ColumnDefinitions="5,*,5">
                        <SwipeView BackgroundColor="Transparent" Grid.Row="1" Grid.Column="1">
                            <SwipeView.RightItems>
                                <SwipeItems>
                                    <SwipeItemView Command="{Binding Source={x:Reference ContextSwipeView}, Path=BindingContext.EditCommand}" CommandParameter="{Binding .}">
                                        <Frame Margin="5,0,0,0" BackgroundColor="{DynamicResource Edit_Backgroundcolor}" CornerRadius="20" xct:ShadowEffect.Opacity="0.7" BorderColor="{DynamicResource Edit_Bordercolor}">
                                            <Label Text="Bearbeiten" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Edit_Textcolor}" FontAttributes="Bold" FontSize="Medium"/>
                                        </Frame>
                                    </SwipeItemView>
                                </SwipeItems>
                            </SwipeView.RightItems>
                            <SwipeView.LeftItems>
                                <SwipeItems>
                                    <SwipeItemView Command="{Binding Source={x:Reference ContextSwipeView}, Path=BindingContext.RemoveCommand}" CommandParameter="{Binding .}">
                                        <Frame Margin="0,0,5,0" BackgroundColor="{DynamicResource Remove_Backgroundcolor}" CornerRadius="20" xct:ShadowEffect.Opacity="0.7" BorderColor="{DynamicResource Remove_Bordercolor}">
                                            <Label Text="Löschen" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{DynamicResource Remove_Textcolor}" FontAttributes="Bold" FontSize="Medium"/>
                                        </Frame>
                                    </SwipeItemView>
                                </SwipeItems>
                            </SwipeView.LeftItems>
                            <cells:Outcome_Cell Grid.Row="1" Grid.Column="1"/>
                        </SwipeView>
                    </Grid>
                </ViewCell>
            </DataTemplate>
            <cells:Transaktions_Template_Selector x:Key="Transaktions_Selector" Einnahmen="{StaticResource Einnamen}" Ausgaben="{StaticResource Ausgaben}"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Order="Secondary" Text="Aktualisieren"  Command="{Binding RefreshCommand}"/>
        <ToolbarItem Order="Secondary" Text="Zeitraum"  Command="{Binding Period_Command}"/>
        <ToolbarItem Order="Secondary" Text="Ansicht"  Command="{Binding GroupingOption_Command}"/>
        <ToolbarItem Order="Secondary" Text="Suchen"  Command="{Binding Set_Searchbar_Visibility_Command}"/>
    </ContentPage.ToolbarItems>

    <StackLayout>
        <StackLayout Orientation="Vertical">
            <xct:Expander>
                <xct:Expander.Header>
                    <Grid Padding="0">
                        <SearchBar Placeholder="Suchen" Text="{Binding Search_Text}" BackgroundColor="DimGray" IsVisible="{Binding Serchbar_Visibility}">
                            <SearchBar.Behaviors>
                                <xct:EventToCommandBehavior EventName="SearchButtonPressed" Command="{Binding Search_Command}"/>
                                <xct:EventToCommandBehavior EventName="TextChanged" Command="{Binding Search_Command2}"/>
                            </SearchBar.Behaviors>
                        </SearchBar>
                        <ImageButton BackgroundColor="DimGray" Padding="10" IsVisible="{Binding Serchbar_Visibility}" HorizontalOptions="End" Command="{Binding Filter_Command}">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="FAS" Glyph="{x:Static fontAwesome:FontAwesomeIcons.Filter}" Color="{Binding Filter_ActivityColor}"/>
                            </ImageButton.Source>
                        </ImageButton>
                    </Grid>
                </xct:Expander.Header>
                <xct:Expander.Behaviors>
                    <xct:EventToCommandBehavior EventName="Tapped" Command="{Binding The_Searchbar_is_Tapped}"/>
                </xct:Expander.Behaviors>
            </xct:Expander>

            <ActivityIndicator Color="{DynamicResource Refresh_Color}" IsRunning="{Binding ActivityIndicator_IsRunning}" BackgroundColor="Transparent" IsVisible="{Binding ActivityIndicator_IsVisible}"/>
        </StackLayout>

        <ListView
            CachingStrategy="RecycleElement"
            IsPullToRefreshEnabled="false"
            IsRefreshing="False"
            HasUnevenRows="True"
            x:Name="SuggestionSwipeView"
            ItemsSource="{Binding SuggestionCollection}"
            IsGroupingEnabled="false"
            SelectionMode="{Binding Suggestion_SelectedMode}"
            SelectedItem="{Binding Selected_Suggestion}"
            SeparatorVisibility="None"
            IsVisible="{Binding List_of_Suggestion_Status}"
            BackgroundColor="{DynamicResource Page_Backgroundcolor}"
            VerticalOptions="FillAndExpand">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="model:Suggestion">
                    <ViewCell>
                        <Grid ColumnDefinitions="50,*,70" Padding="5">
                            <Grid ColumnDefinitions="50,20" Padding="0" Grid.Column="2">
                                <Button Grid.Column="0" BackgroundColor="{DynamicResource Page_Backgroundcolor}" Text="X" TextColor="Black" HorizontalOptions="Fill" Command="{Binding Source={x:Reference SuggestionSwipeView}, Path=BindingContext.Delet_Suggestion}" CommandParameter="{Binding .}"/>
                            </Grid>
                            <Label Text="{Binding Suggestion_value}" FontSize="Body" TextColor="White" HeightRequest="10" VerticalTextAlignment="Center" Grid.Column="1" BackgroundColor="{DynamicResource Page_Backgroundcolor}"/>
                        </Grid>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <StackLayout
            IsVisible="{Binding List_of_Transaktion_Status}"
            Padding="0">
            <ListView
            CachingStrategy = "RecycleElement"
            IsEnabled="True"
            RefreshCommand="{Binding RefreshCommand}"
            IsRefreshing="{Binding IsBusy, Mode=OneWay}"
            IsPullToRefreshEnabled="True"
            RefreshControlColor="{DynamicResource Refresh_Color}"    
            HasUnevenRows="True"
            x:Name="ContextSwipeView"
            ItemsSource="{Binding transaktionGroups}"
            IsGroupingEnabled="True"
            GroupDisplayBinding="{Binding Key}"
            SelectionMode="None"
            SeparatorVisibility="None"
            ItemTemplate="{StaticResource Transaktions_Selector}">
                <ListView.GroupHeaderTemplate>
                    <DataTemplate x:DataType="{x:Null}">
                        <ViewCell Height = "30" >
                            <StackLayout VerticalOptions="Start" Padding="1">
                                <Label Text = "{Binding Key}" TextColor="{DynamicResource Grouping_Textcolor}" VerticalOptions="Center" HorizontalOptions="Center" FontSize="15" FontAttributes="Bold"/>
                            </StackLayout>
                        </ViewCell>
                    </DataTemplate>
                </ListView.GroupHeaderTemplate>
            </ListView>
            <Grid ColumnDefinitions="*,Auto,*" HeightRequest="80" Padding="0" Margin="0,-7,0,5">
                <Frame IsVisible="{Binding IsSaldoVisibility}" CornerRadius="50"  Padding="10" Grid.Column="1" HeightRequest="50" BackgroundColor="{DynamicResource Saldo_Backgroundcolor}" HorizontalOptions="Center" HasShadow="True" xct:ShadowEffect.Color="{Binding Saldo_Evaluate}">
                    <StackLayout>
                        <StackLayout Orientation="Horizontal" Spacing="2" HorizontalOptions="Center" VerticalOptions="Center">
                            <Label Text="Stand : " TextColor="{DynamicResource Saldo_Textcolor}" FontSize="Body" FontAttributes="Bold" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" HorizontalOptions="Center" VerticalOptions="Center"/>
                            <Label Text="{Binding Saldo_Value}" TextColor="{Binding Saldo_Evaluate}" FontSize="Body" FontAttributes="Bold" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" HorizontalOptions="Center" VerticalOptions="Center"/>
                            <Label Text="€" TextColor="{Binding Saldo_Evaluate}" FontSize="Body" FontAttributes="Bold" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" HorizontalOptions="Center" VerticalOptions="Center"/>
                        </StackLayout>
                        <StackLayout Orientation="Horizontal" Spacing="2" HorizontalOptions="Center" VerticalOptions="Center" Margin="20,0,20,0">
                            <Label Text="{Binding Saldo_Date}" TextColor="{DynamicResource Saldo_Textcolor}" FontSize="Subtitle" FontAttributes="None" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" HorizontalOptions="Center" VerticalOptions="Center" />
                        </StackLayout>
                    </StackLayout>
                </Frame>
                <Grid ColumnDefinitions="*,Auto,10" Grid.Column="2" Padding="0" VerticalOptions="Center" HeightRequest="80" Margin="0,5,0,0">
                    <Button Command="{Binding Add_Command}" Grid.Column="1" FontSize="30" Text="+" TextColor="Orange" VerticalOptions="Center" HorizontalOptions="Center" CornerRadius="60" WidthRequest="55" HeightRequest="54" Padding="0"/>
                </Grid>
            </Grid>
        </StackLayout>


        <Grid RowDefinitions="300,100,*" IsVisible="{Binding Kein_Ergebnis_Suggestion_Status}" BackgroundColor="{DynamicResource Page_Backgroundcolor}" VerticalOptions="FillAndExpand">
            <Label Grid.Row="1" Text="Keine Suchbegriff vorhanden!" TextColor="Black" FontSize="20" FontAttributes="Bold" HorizontalTextAlignment="Center" HorizontalOptions="Center"/>
        </Grid>

        <Grid RowDefinitions="300,100,*" IsVisible="{Binding Kein_Ergebnis_Transaktion_Status}" VerticalOptions="FillAndExpand">
            <Label Grid.Row="1" Text="Keine Transaktionen vorhanden!" TextColor="Black" FontSize="20" FontAttributes="Bold" HorizontalTextAlignment="Center" HorizontalOptions="Center"/>
            <Button Command="{Binding Add_Command}" Grid.Row="2" FontSize="30" Text="+" TextColor="Orange" VerticalOptions="End" HorizontalOptions="End" CornerRadius="60" WidthRequest="55" HeightRequest="55" Padding="5" Margin="0,0,10,10"/>
        </Grid>
    </StackLayout>

</ContentPage>